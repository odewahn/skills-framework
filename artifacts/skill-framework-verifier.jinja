# 🔎 Verification Capability Map (VCM)

The Verification Capability Map is the bridge between a **skill framework** (what learners are expected to know) and a **set of MCP tools** (what can be programmatically verified).  

Its purpose is to:  
- Identify which skills are **auto-verifiable** with the given toolset, which require scaffolding (fixtures, scripts), which are best suited for **manual reflection or discussion**, and which can be tested as **knowledge checks** (multiple-choice or short-answer).  
- Define the **fixtures** (repos, datasets, files) needed to test each skill.  
- Suggest **probes** (commands, file inspections, queries) that a verifier can use to assess learner performance.  
- Establish **pass/fail criteria** and reset conditions so labs can be run repeatedly and reliably.  
- Ensure consistency in how verification results are captured, using a **structured result schema**.  

The VCM helps course/lab authors design practical training environments where learners practice skills and get immediate, automated feedback where possible.

---

## Skill Framework

{{skill_framework}}

---

## MCP Context

{{mcp_context}}

> **Guidance:**  
> - Favor auto-verifiable skills (Levels 1–4).  
> - Level 5 skills usually involve reflection, mentoring, or design and are best marked “manual review.”  
> - Level 1 skills may also be verified via **knowledge checks** (MCQ/short answer).

---

## Result Record Schema (for verifiers to emit)

```json
{
  "status": "PASS|FAIL",
  "skill": "<skill text>",
  "observations": "<string or list>",
  "evidence": { "stdout": "<captured output>", "stderr": "", "files": [] },
  "hints": ["<next-step or remediation>"]
}
```

This schema ensures results are consistent and machine-readable.  
- **status** indicates whether the learner’s attempt met the criteria.  
- **observations** capture human-readable notes or patterns detected.  
- **evidence** provides supporting data for transparency and debugging.  
- **hints** give learners targeted next steps to improve.

---

# Skills & Verification Map

## Level 1 — Exploring

### Skill: [Paste skill here]

- **Feasibility (initial):** [auto-verifiable | verifiable with scaffolding | knowledge check | manual review]  
- **Verification mode:** [lab probe | knowledge check | manual review]  
- **Required fixtures (if lab):** [repo/db/json file/etc.]  
- **Suggested probes (if lab):** [shell commands, file reads, etc.]  
- **Knowledge check example (if applicable):**  
  Q: [Insert multiple-choice or short-answer question]  
  Options: [A) ..., B) ..., C) ...]  
  **Correct answer:** [Insert correct option]  
- **Pass/Fail criteria (initial):** [expected output/state vs fail signals OR correct answer]  
- **Reset needed between attempts (if lab):** [true/false]  
- **Notes (author to refine):** [...]

---

## Level 2 — Applying

### Skill: [Paste skill here]

- **Feasibility (initial):** [...]  
- **Verification mode:** [lab probe | knowledge check | manual review]  
- **Required fixtures (initial):** [...]  
- **Suggested probes (initial):** [...]  
- **Pass/Fail criteria (initial):** [...]  
- **Reset needed between attempts:** [...]  
- **Notes:** [...]

---

## Level 3 — Building

[Repeat structure above for each skill]

---

## Level 4 — Advancing

[Repeat structure above for each skill]

---

## Level 5 — Innovating

[Repeat structure above for each skill; most will be manual review/reflection]
